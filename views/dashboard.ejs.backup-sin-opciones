<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel CRM - Tracking de Conversiones</title>
    <link rel="stylesheet" href="/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>üìä Panel de Tracking</h1>
            <p class="subtitle">Sistema de seguimiento de conversiones con Facebook</p>
        </header>

        <!-- ESTAD√çSTICAS -->
        <section class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon">üëÜ</div>
                <div class="stat-value"><%= stats.total_clicks %></div>
                <div class="stat-label">Clicks totales</div>
            </div>

            <div class="stat-card">
                <div class="stat-icon">üí¨</div>
                <div class="stat-value"><%= stats.total_messages %></div>
                <div class="stat-label">Mensajes recibidos</div>
            </div>

            <div class="stat-card">
                <div class="stat-icon">üõí</div>
                <div class="stat-value"><%= stats.total_purchases %></div>
                <div class="stat-label">Compras realizadas</div>
            </div>

            <div class="stat-card highlight">
                <div class="stat-icon">üìà</div>
                <div class="stat-value"><%= stats.conversion_click_to_purchase %>%</div>
                <div class="stat-label">Conversi√≥n total</div>
            </div>
        </section>

        <!-- M√âTRICAS DE CONVERSI√ìN -->
        <section class="conversion-metrics">
            <h2>M√©tricas de conversi√≥n</h2>
            <div class="metrics-grid">
                <div class="metric">
                    <span class="metric-label">Click ‚Üí Mensaje:</span>
                    <span class="metric-value"><%= stats.conversion_click_to_message %>%</span>
                </div>
                <div class="metric">
                    <span class="metric-label">Mensaje ‚Üí Compra:</span>
                    <span class="metric-value"><%= stats.conversion_message_to_purchase %>%</span>
                </div>
            </div>
        </section>

        <!-- ROAS POR CAMPA√ëA -->
        <section class="campaign-roas-section">
            <div class="section-header">
                <h2>üí∞ ROAS por Campa√±a</h2>
                <button onclick="openSpendModal()" class="btn btn-primary">Establecer gastos</button>
            </div>

            <div class="campaign-roas-grid">
                <%
                const campaigns = Object.values(campaignStats);
                if (campaigns.length === 0) { %>
                    <div class="empty-state">
                        <p>No hay datos de campa√±as disponibles</p>
                    </div>
                <% } else {
                    campaigns.forEach(campaign => {
                        const roasClass = parseFloat(campaign.roas) >= 2 ? 'roas-good' : parseFloat(campaign.roas) >= 1 ? 'roas-ok' : 'roas-bad';
                %>
                    <div class="campaign-card <%= roasClass %>-border">
                        <div class="campaign-header">
                            <h3 class="campaign-name"><%= campaign.name %></h3>
                            <span class="campaign-roas <%= roasClass %>">
                                ROAS: <%= campaign.roas %>x
                            </span>
                        </div>

                        <!-- M√âTRICAS CLAVE TIER 1 -->
                        <div class="tier1-metrics">
                            <div class="tier1-metric">
                                <span class="tier1-label">CPL</span>
                                <span class="tier1-value">$<%= campaign.cpl %></span>
                                <span class="tier1-sublabel">Costo por Lead</span>
                            </div>
                            <div class="tier1-metric">
                                <span class="tier1-label">CPA</span>
                                <span class="tier1-value">$<%= campaign.cpa %></span>
                                <span class="tier1-sublabel">Costo por Cliente</span>
                            </div>
                            <div class="tier1-metric <%= parseFloat(campaign.margin) > 0 ? 'positive' : 'negative' %>">
                                <span class="tier1-label">Margen</span>
                                <span class="tier1-value">$<%= campaign.margin %></span>
                                <span class="tier1-sublabel">Ganancia Real</span>
                            </div>
                            <div class="tier1-metric">
                                <span class="tier1-label">Cierre</span>
                                <span class="tier1-value"><%= campaign.closeRate %>%</span>
                                <span class="tier1-sublabel">Tasa Conversi√≥n</span>
                            </div>
                        </div>

                        <!-- M√âTRICAS DETALLADAS -->
                        <div class="campaign-stats">
                            <div class="campaign-stat">
                                <span class="stat-label">Clicks:</span>
                                <span class="stat-value"><%= campaign.clicks %></span>
                            </div>
                            <div class="campaign-stat">
                                <span class="stat-label">Mensajes:</span>
                                <span class="stat-value"><%= campaign.messages %></span>
                            </div>
                            <div class="campaign-stat">
                                <span class="stat-label">Compras:</span>
                                <span class="stat-value"><%= campaign.purchases %></span>
                            </div>
                            <div class="campaign-stat">
                                <span class="stat-label">Ingresos:</span>
                                <span class="stat-value">$<%= campaign.revenue.toFixed(2) %></span>
                            </div>
                            <div class="campaign-stat">
                                <span class="stat-label">Gasto:</span>
                                <span class="stat-value">$<%= campaign.spend.toFixed(2) %></span>
                            </div>
                        </div>

                        <!-- ALERTA SI ROAS < 1 -->
                        <% if (parseFloat(campaign.roas) < 1 && campaign.spend > 0) { %>
                        <div class="campaign-alert alert-danger">
                            ‚ö†Ô∏è ALERTA: Esta campa√±a est√° perdiendo dinero ($<%= Math.abs(parseFloat(campaign.margin)).toFixed(2) %>)
                        </div>
                        <% } %>

                        <!-- ALERTA SI ROAS > 2 -->
                        <% if (parseFloat(campaign.roas) >= 2) { %>
                        <div class="campaign-alert alert-success">
                            ‚úÖ Excelente rendimiento! Considera escalar esta campa√±a
                        </div>
                        <% } %>
                    </div>
                <% }); } %>
            </div>
        </section>

        <!-- MODAL PARA ESTABLECER GASTOS -->
        <div id="spendModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>üíµ Establecer Gasto de Campa√±a</h3>
                    <span class="close" onclick="closeSpendModal()">&times;</span>
                </div>
                <form id="spendForm" class="modal-form">
                    <div class="form-group">
                        <label for="campaignName">Nombre de campa√±a:</label>
                        <input type="text" id="campaignName" name="campaign" required placeholder="Ej: casino-deposito-enero">
                    </div>
                    <div class="form-group">
                        <label for="campaignAmount">Monto gastado (USD):</label>
                        <input type="number" id="campaignAmount" name="amount" step="0.01" min="0" required placeholder="Ej: 500.00">
                    </div>
                    <div class="form-actions">
                        <button type="button" onclick="closeSpendModal()" class="btn btn-secondary">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- HERRAMIENTAS Y FILTROS -->
        <section class="tools-section">
            <div class="tools-header">
                <h2>Herramientas</h2>
                <button onclick="exportToExcel()" class="btn btn-export">üì• Exportar a Excel</button>
            </div>

            <div class="filters-container">
                <div class="filter-group">
                    <label>Filtrar por fecha:</label>
                    <select id="dateFilter" onchange="filterByDate()">
                        <option value="all">Todos los eventos</option>
                        <option value="today">Hoy</option>
                        <option value="yesterday">Ayer</option>
                        <option value="week">√öltima semana</option>
                        <option value="month">√öltimo mes</option>
                        <option value="custom">Rango personalizado</option>
                    </select>
                </div>

                <div id="customDateRange" style="display: none;" class="filter-group">
                    <input type="date" id="startDate" onchange="filterByCustomRange()">
                    <span>hasta</span>
                    <input type="date" id="endDate" onchange="filterByCustomRange()">
                </div>
            </div>
        </section>

        <!-- GR√ÅFICO DE CONVERSIONES -->
        <section class="chart-section">
            <h2>Evoluci√≥n de conversiones</h2>
            <canvas id="conversionsChart" width="400" height="150"></canvas>
        </section>

        <!-- FORMULARIOS DE REGISTRO MANUAL -->
        <section class="forms-section">
            <div class="form-container">
                <h3>‚úâÔ∏è Registrar mensaje recibido</h3>
                <form id="messageForm" class="action-form">
                    <input
                        type="text"
                        id="messageEventId"
                        name="eventId"
                        placeholder="Pega aqu√≠ el c√≥digo del mensaje de WhatsApp"
                        required
                    >
                    <button type="submit" class="btn btn-message">Marcar como mensaje</button>
                </form>
            </div>

            <div class="form-container">
                <h3>üí∞ Registrar compra realizada</h3>
                <form id="purchaseForm" class="action-form">
                    <input
                        type="text"
                        id="purchaseEventId"
                        name="eventId"
                        placeholder="C√≥digo del cliente que compr√≥"
                        required
                    >
                    <div class="form-row">
                        <input
                            type="number"
                            id="purchaseValue"
                            name="value"
                            placeholder="Valor (obligatorio)"
                            step="0.01"
                            min="0.01"
                            required
                        >
                        <select id="purchaseCurrency" name="currency">
                            <option value="USD">USD</option>
                            <option value="EUR">EUR</option>
                            <option value="ARS">ARS</option>
                            <option value="MXN">MXN</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-purchase">Marcar como compra</button>
                </form>
            </div>
        </section>

        <!-- TABLA DE EVENTOS -->
        <section class="events-section">
            <div class="section-header">
                <h2>Historial de eventos</h2>
                <div class="search-container">
                    <input
                        type="text"
                        id="searchEventId"
                        placeholder="üîç Buscar por Event ID..."
                        class="search-input"
                    >
                    <button id="clearSearch" class="btn-clear-search" style="display: none;">‚úï</button>
                </div>
            </div>

            <% if (events.length === 0) { %>
                <div class="empty-state">
                    <p>üì≠ No hay eventos registrados todav√≠a</p>
                    <p class="empty-hint">Los eventos aparecer√°n aqu√≠ cuando alguien visite tu landing page</p>
                </div>
            <% } else { %>
                <div class="table-container">
                    <table class="events-table">
                        <thead>
                            <tr>
                                <th>Estado</th>
                                <th>Event ID</th>
                                <th>IP del Cliente</th>
                                <th>Campa√±a</th>
                                <th>fbclid</th>
                                <th>Fecha/Hora</th>
                                <th>Click WhatsApp</th>
                                <th>Mensaje</th>
                                <th>Compra</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% events.forEach(event => { %>
                                <tr class="event-row <%= event.has_purchase ? 'status-purchase' : event.has_message ? 'status-message' : event.whatsapp_clicked ? 'status-click' : 'status-pageview' %>">
                                    <td>
                                        <span class="status-badge <%= event.has_purchase ? 'badge-purchase' : event.has_message ? 'badge-message' : event.whatsapp_clicked ? 'badge-click' : 'badge-pageview' %>">
                                            <%= event.has_purchase ? '‚úÖ Compra' : event.has_message ? 'üí¨ Mensaje' : event.whatsapp_clicked ? 'üëÜ Click' : 'üëÅÔ∏è Vista' %>
                                        </span>
                                    </td>
                                    <td>
                                        <code class="event-id" title="<%= event.event_id %>">
                                            <%= event.event_id.substring(0, 8) %>...
                                        </code>
                                    </td>
                                    <td>
                                        <code class="ip-address">
                                            <%= event.client_ip || 'No capturada' %>
                                        </code>
                                    </td>
                                    <td>
                                        <% if (event.attribution && event.attribution.utm_campaign) { %>
                                            <span class="badge-campaign" title="<%= event.attribution.utm_campaign %>">
                                                <%= event.attribution.utm_campaign.substring(0, 15) %><%= event.attribution.utm_campaign.length > 15 ? '...' : '' %>
                                            </span>
                                        <% } else { %>
                                            <span class="text-muted">-</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (event.attribution && event.attribution.fbclid) { %>
                                            <code class="fbclid" title="<%= event.attribution.fbclid %>">
                                                <%= event.attribution.fbclid.substring(0, 10) %>...
                                            </code>
                                        <% } else if (event.attribution && event.attribution.gclid) { %>
                                            <code class="gclid" title="<%= event.attribution.gclid %>">
                                                G:<%= event.attribution.gclid.substring(0, 8) %>...
                                            </code>
                                        <% } else { %>
                                            <span class="text-muted">-</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <%= new Date(event.created_at).toLocaleString('es-AR', {
                                            day: '2-digit',
                                            month: '2-digit',
                                            year: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit',
                                            timeZone: 'America/Argentina/Buenos_Aires'
                                        }) %>
                                    </td>
                                    <td>
                                        <%= event.whatsapp_clicked ? '‚úÖ' : '‚ùå' %>
                                    </td>
                                    <td>
                                        <%= event.has_message ? '‚úÖ' : '‚ùå' %>
                                        <% if (event.has_message && event.message_time) { %>
                                            <br><small><%= new Date(event.message_time).toLocaleTimeString('es-AR', { timeZone: 'America/Argentina/Buenos_Aires' }) %></small>
                                        <% } %>
                                    </td>
                                    <td>
                                        <%= event.has_purchase ? '‚úÖ' : '‚ùå' %>
                                        <% if (event.has_purchase && event.purchase_value) { %>
                                            <br><small>$<%= event.purchase_value %></small>
                                        <% } %>
                                    </td>
                                    <td>
                                        <button
                                            class="btn-copy"
                                            onclick="copyEventId('<%= event.event_id %>')"
                                            title="Copiar Event ID completo"
                                        >
                                            üìã Copiar ID
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>

                <!-- PAGINACI√ìN -->
                <div class="pagination-controls" id="paginationControls" style="display: none;">
                    <div class="pagination-info">
                        Mostrando <span id="showingFrom">1</span> - <span id="showingTo">20</span> de <span id="totalEvents">0</span> eventos
                    </div>
                    <div class="pagination-buttons">
                        <button onclick="changePage('prev')" id="prevBtn" class="btn-pagination">‚Üê Anterior</button>
                        <span id="pageInfo" style="margin: 0 15px; color: var(--text-muted);">P√°gina <span id="currentPage">1</span> de <span id="totalPages">1</span></span>
                        <button onclick="changePage('next')" id="nextBtn" class="btn-pagination">Siguiente ‚Üí</button>
                    </div>
                    <div class="pagination-size">
                        <label for="pageSize">Eventos por p√°gina:</label>
                        <select id="pageSize" onchange="changePageSize()">
                            <option value="10">10</option>
                            <option value="20" selected>20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
            <% } %>
        </section>

        <!-- LOGS DE AUDITOR√çA -->
        <section class="logs-section">
            <h2>üìã Logs de Facebook Conversion API (√öltimos 50)</h2>

            <% if (logs.length === 0) { %>
                <div class="empty-state">
                    <p>üì≠ No hay logs todav√≠a</p>
                    <p class="empty-hint">Los logs aparecer√°n aqu√≠ cuando se env√≠en eventos a Facebook</p>
                </div>
            <% } else { %>
                <div class="logs-container">
                    <% logs.forEach(log => { %>
                        <div class="log-entry <%= log.status === 'success' ? 'log-success' : 'log-error' %>">
                            <div class="log-header">
                                <span class="log-status">
                                    <%= log.status === 'success' ? '‚úÖ' : '‚ùå' %>
                                    <strong><%= log.event_name %></strong>
                                </span>
                                <span class="log-time">
                                    <%= new Date(log.timestamp).toLocaleString('es-AR', {
                                        day: '2-digit',
                                        month: '2-digit',
                                        hour: '2-digit',
                                        minute: '2-digit',
                                        second: '2-digit',
                                        timeZone: 'America/Argentina/Buenos_Aires'
                                    }) %>
                                </span>
                            </div>
                            <div class="log-details">
                                <div class="log-detail">
                                    <strong>Event ID:</strong>
                                    <code class="event-id-small"><%= log.event_id.substring(0, 12) %>...</code>
                                    <button class="btn-copy-small" onclick="copyEventId('<%= log.event_id %>')">üìã</button>
                                </div>
                                <div class="log-detail">
                                    <strong>Pixel ID:</strong>
                                    <code><%= log.pixel_id %></code>
                                </div>
                                <% if (log.status === 'success') { %>
                                    <div class="log-detail">
                                        <strong>Eventos recibidos:</strong>
                                        <span class="badge badge-success"><%= log.events_received || 1 %></span>
                                    </div>
                                    <% if (log.messages && log.messages.length > 0) { %>
                                        <div class="log-detail">
                                            <strong>Mensajes de Facebook:</strong>
                                            <ul class="log-messages">
                                                <% log.messages.forEach(msg => { %>
                                                    <li><%= msg %></li>
                                                <% }); %>
                                            </ul>
                                        </div>
                                    <% } %>
                                <% } else { %>
                                    <div class="log-detail log-error-detail">
                                        <strong>Error:</strong>
                                        <pre><%= JSON.stringify(log.error, null, 2) %></pre>
                                    </div>
                                <% } %>
                                <% if (log.payload && log.payload.custom_data && Object.keys(log.payload.custom_data).length > 0) { %>
                                    <div class="log-detail">
                                        <strong>Datos custom:</strong>
                                        <code><%= JSON.stringify(log.payload.custom_data) %></code>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } %>
        </section>

        <footer class="footer">
            <p>üîÑ La p√°gina se actualiza autom√°ticamente cada 30 segundos</p>
            <p class="footer-hint">√öltima actualizaci√≥n: <span id="lastUpdate"><%= new Date().toLocaleTimeString('es-AR', { timeZone: 'America/Argentina/Buenos_Aires' }) %></span></p>
        </footer>
    </div>

    <!-- Notificaciones -->
    <div id="notification" class="notification"></div>

    <script>
        // Auto-refresh cada 30 segundos
        setTimeout(() => {
            window.location.reload();
        }, 30000);

        // Copiar event_id al portapapeles
        function copyEventId(eventId) {
            navigator.clipboard.writeText(eventId).then(() => {
                showNotification('‚úÖ Event ID copiado al portapapeles', 'success');
            }).catch(() => {
                showNotification('‚ùå Error al copiar', 'error');
            });
        }

        // Mostrar notificaci√≥n mejorada
        function showNotification(message, type = 'info', details = null) {
            const notification = document.getElementById('notification');

            if (details) {
                // Notificaci√≥n con detalles expandidos
                notification.innerHTML = `
                    <div class="notification-header">${message}</div>
                    <div class="notification-details">
                        ${details}
                    </div>
                `;
            } else {
                notification.textContent = message;
            }

            notification.className = `notification show ${type}`;

            setTimeout(() => {
                notification.classList.remove('show');
            }, 5000);
        }

        // Buscador de Event ID
        const searchInput = document.getElementById('searchEventId');
        const clearSearchBtn = document.getElementById('clearSearch');
        const tableRows = document.querySelectorAll('.event-row');

        if (searchInput) {
            searchInput.addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();

                if (searchTerm) {
                    clearSearchBtn.style.display = 'block';
                } else {
                    clearSearchBtn.style.display = 'none';
                }

                let foundCount = 0;
                tableRows.forEach(row => {
                    const eventIdElement = row.querySelector('.event-id');
                    const fullEventId = eventIdElement ? eventIdElement.getAttribute('title') : '';

                    if (fullEventId.toLowerCase().includes(searchTerm)) {
                        row.style.display = '';
                        foundCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Mostrar mensaje si no hay resultados
                const tableContainer = document.querySelector('.table-container');
                const existingNoResults = document.querySelector('.no-results-message');

                if (foundCount === 0 && searchTerm && tableContainer) {
                    if (!existingNoResults) {
                        const noResultsMsg = document.createElement('div');
                        noResultsMsg.className = 'no-results-message';
                        noResultsMsg.textContent = `No se encontraron eventos con el ID: "${searchTerm}"`;
                        tableContainer.insertBefore(noResultsMsg, tableContainer.firstChild);
                    }
                } else if (existingNoResults) {
                    existingNoResults.remove();
                }
            });

            clearSearchBtn.addEventListener('click', function() {
                searchInput.value = '';
                clearSearchBtn.style.display = 'none';
                tableRows.forEach(row => row.style.display = '');
                const existingNoResults = document.querySelector('.no-results-message');
                if (existingNoResults) existingNoResults.remove();
            });
        }

        // Manejar formulario de mensaje
        document.getElementById('messageForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const eventId = document.getElementById('messageEventId').value.trim();

            try {
                const response = await fetch(`/api/events/${eventId}/message`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await response.json();

                if (data.success) {
                    const fbApi = data.facebook_api;
                    let details = `
                        <div><strong>Event ID:</strong> ${eventId.substring(0, 12)}...</div>
                        <div><strong>Evento:</strong> Contact (Mensaje)</div>
                    `;

                    if (fbApi && fbApi.success) {
                        details += `<div><strong>‚úÖ Facebook:</strong> ${fbApi.events_received || 1} evento(s) recibido(s)</div>`;
                        if (fbApi.messages && fbApi.messages.length > 0) {
                            details += `<div><strong>Mensaje FB:</strong> ${fbApi.messages.join(', ')}</div>`;
                        }
                    }

                    showNotification('‚úÖ Mensaje registrado y enviado a Facebook', 'success', details);
                    setTimeout(() => window.location.reload(), 2000);
                } else {
                    showNotification('‚ùå ' + (data.error || 'Error al registrar mensaje'), 'error');
                }
            } catch (error) {
                showNotification('‚ùå Error de conexi√≥n', 'error');
            }
        });

        // Manejar formulario de compra
        document.getElementById('purchaseForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const eventId = document.getElementById('purchaseEventId').value.trim();
            const value = document.getElementById('purchaseValue').value;
            const currency = document.getElementById('purchaseCurrency').value;

            try {
                const response = await fetch(`/api/events/${eventId}/purchase`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ value: parseFloat(value) || 0, currency })
                });

                const data = await response.json();

                if (data.success) {
                    const fbApi = data.facebook_api;
                    let details = `
                        <div><strong>Event ID:</strong> ${eventId.substring(0, 12)}...</div>
                        <div><strong>Evento:</strong> Purchase (Compra)</div>
                    `;

                    if (value) {
                        details += `<div><strong>Valor:</strong> ${currency} ${value}</div>`;
                    }

                    if (fbApi && fbApi.success) {
                        details += `<div><strong>‚úÖ Facebook:</strong> ${fbApi.events_received || 1} evento(s) recibido(s)</div>`;
                        if (fbApi.messages && fbApi.messages.length > 0) {
                            details += `<div><strong>Mensaje FB:</strong> ${fbApi.messages.join(', ')}</div>`;
                        }
                    }

                    showNotification('‚úÖ Compra registrada y enviada a Facebook', 'success', details);
                    setTimeout(() => window.location.reload(), 2000);
                } else {
                    showNotification('‚ùå ' + (data.error || 'Error al registrar compra'), 'error');
                }
            } catch (error) {
                showNotification('‚ùå Error de conexi√≥n', 'error');
            }
        });

        // ============================================
        // NUEVAS FUNCIONALIDADES
        // ============================================

        // Variables globales para almacenar todos los eventos
        const allEvents = <%- JSON.stringify(events) %>;
        let filteredEvents = [...allEvents];
        let conversionChart = null;

        // ============================================
        // 1. EXPORTAR A EXCEL
        // ============================================

        function exportToExcel() {
            // Crear contenido CSV
            let csv = 'Event ID,Fecha/Hora,IP Cliente,Campa√±a,fbclid,Click WhatsApp,Mensaje,Compra,Valor Compra\n';

            filteredEvents.forEach(event => {
                const fecha = new Date(event.created_at).toLocaleString('es-AR', { timeZone: 'America/Argentina/Buenos_Aires' });
                const ip = event.client_ip || 'N/A';
                const campaign = (event.attribution && event.attribution.utm_campaign) || '-';
                const fbclid = (event.attribution && event.attribution.fbclid) || '-';
                const click = event.whatsapp_clicked ? 'S√≠' : 'No';
                const mensaje = event.has_message ? 'S√≠' : 'No';
                const compra = event.has_purchase ? 'S√≠' : 'No';
                const valor = event.purchase_value || 0;

                csv += `"${event.event_id}","${fecha}","${ip}","${campaign}","${fbclid}","${click}","${mensaje}","${compra}","${valor}"\n`;
            });

            // Descargar archivo
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', `eventos_${new Date().toISOString().split('T')[0]}.csv`);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);

            showNotification('‚úÖ Archivo Excel descargado', 'success');
        }

        // ============================================
        // 2. FILTROS POR FECHA
        // ============================================

        function filterByDate() {
            const filter = document.getElementById('dateFilter').value;
            const customDateRange = document.getElementById('customDateRange');

            // Mostrar/ocultar rango personalizado
            if (filter === 'custom') {
                customDateRange.style.display = 'flex';
                return;
            } else {
                customDateRange.style.display = 'none';
            }

            const now = new Date();
            let startDate = new Date(0); // Inicio de los tiempos

            if (filter === 'today') {
                startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
            } else if (filter === 'yesterday') {
                const yesterday = new Date(now);
                yesterday.setDate(yesterday.getDate() - 1);
                startDate = new Date(yesterday.getFullYear(), yesterday.getMonth(), yesterday.getDate());
                const endDate = new Date(yesterday.getFullYear(), yesterday.getMonth(), yesterday.getDate(), 23, 59, 59);
                filterEvents(startDate, endDate);
                return;
            } else if (filter === 'week') {
                startDate = new Date(now);
                startDate.setDate(startDate.getDate() - 7);
            } else if (filter === 'month') {
                startDate = new Date(now);
                startDate.setMonth(startDate.getMonth() - 1);
            }

            filterEvents(startDate, new Date());
        }

        function filterByCustomRange() {
            const startInput = document.getElementById('startDate').value;
            const endInput = document.getElementById('endDate').value;

            if (!startInput || !endInput) return;

            const startDate = new Date(startInput);
            const endDate = new Date(endInput);
            endDate.setHours(23, 59, 59);

            filterEvents(startDate, endDate);
        }

        function filterEvents(startDate, endDate) {
            filteredEvents = allEvents.filter(event => {
                const eventDate = new Date(event.created_at);
                return eventDate >= startDate && eventDate <= endDate;
            });

            // Actualizar tabla
            updateTable();

            // Actualizar gr√°fico
            updateChart();

            showNotification(`‚úÖ Mostrando ${filteredEvents.length} eventos`, 'success');
        }

        function updateTable() {
            const tableRows = document.querySelectorAll('.event-row');
            const allEventIds = allEvents.map(e => e.event_id);
            const filteredEventIds = new Set(filteredEvents.map(e => e.event_id));

            tableRows.forEach(row => {
                const eventIdElement = row.querySelector('.event-id');
                const fullEventId = eventIdElement ? eventIdElement.getAttribute('title') : '';

                if (filteredEventIds.has(fullEventId)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        // ============================================
        // 3. GR√ÅFICO DE CONVERSIONES
        // ============================================

        function updateChart() {
            const ctx = document.getElementById('conversionsChart');
            if (!ctx) return;

            // Agrupar eventos por d√≠a
            const eventsByDay = {};

            filteredEvents.forEach(event => {
                const date = new Date(event.created_at);
                const dayKey = date.toISOString().split('T')[0];

                if (!eventsByDay[dayKey]) {
                    eventsByDay[dayKey] = {
                        clicks: 0,
                        messages: 0,
                        purchases: 0
                    };
                }

                if (event.whatsapp_clicked) eventsByDay[dayKey].clicks++;
                if (event.has_message) eventsByDay[dayKey].messages++;
                if (event.has_purchase) eventsByDay[dayKey].purchases++;
            });

            // Ordenar por fecha
            const sortedDays = Object.keys(eventsByDay).sort();

            // Preparar datos para el gr√°fico
            const labels = sortedDays.map(day => {
                const date = new Date(day);
                return date.toLocaleDateString('es-AR', { day: '2-digit', month: '2-digit' });
            });

            const clicksData = sortedDays.map(day => eventsByDay[day].clicks);
            const messagesData = sortedDays.map(day => eventsByDay[day].messages);
            const purchasesData = sortedDays.map(day => eventsByDay[day].purchases);

            // Destruir gr√°fico anterior si existe
            if (conversionChart) {
                conversionChart.destroy();
            }

            // Crear nuevo gr√°fico
            conversionChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Clicks en WhatsApp',
                            data: clicksData,
                            borderColor: '#3b82f6',
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            tension: 0.4
                        },
                        {
                            label: 'Mensajes',
                            data: messagesData,
                            borderColor: '#10b981',
                            backgroundColor: 'rgba(16, 185, 129, 0.1)',
                            tension: 0.4
                        },
                        {
                            label: 'Compras',
                            data: purchasesData,
                            borderColor: '#f59e0b',
                            backgroundColor: 'rgba(245, 158, 11, 0.1)',
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                color: '#cbd5e1',
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#cbd5e1',
                                stepSize: 1
                            },
                            grid: {
                                color: 'rgba(203, 213, 225, 0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                color: '#cbd5e1'
                            },
                            grid: {
                                color: 'rgba(203, 213, 225, 0.1)'
                            }
                        }
                    }
                }
            });
        }

        // ============================================
        // PAGINACI√ìN
        // ============================================

        let currentPage = 1;
        let pageSize = 20;
        let paginatedEvents = [];

        function renderTable() {
            const tbody = document.querySelector('table tbody');
            if (!tbody) return;

            const startIndex = (currentPage - 1) * pageSize;
            const endIndex = startIndex + pageSize;
            paginatedEvents = filteredEvents.slice(startIndex, endIndex);

            // Mostrar/ocultar controles si hay m√°s de 20 eventos
            const paginationControls = document.getElementById('paginationControls');
            if (paginationControls) {
                paginationControls.style.display = filteredEvents.length > 20 ? 'flex' : 'none';
            }

            // Actualizar info de paginaci√≥n
            document.getElementById('totalEvents').textContent = filteredEvents.length;
            document.getElementById('showingFrom').textContent = filteredEvents.length > 0 ? startIndex + 1 : 0;
            document.getElementById('showingTo').textContent = Math.min(endIndex, filteredEvents.length);

            const totalPages = Math.ceil(filteredEvents.length / pageSize) || 1;
            document.getElementById('currentPage').textContent = currentPage;
            document.getElementById('totalPages').textContent = totalPages;

            // Habilitar/deshabilitar botones
            document.getElementById('prevBtn').disabled = currentPage === 1;
            document.getElementById('nextBtn').disabled = currentPage >= totalPages;
        }

        function changePage(direction) {
            const totalPages = Math.ceil(filteredEvents.length / pageSize);

            if (direction === 'prev' && currentPage > 1) {
                currentPage--;
            } else if (direction === 'next' && currentPage < totalPages) {
                currentPage++;
            }

            renderTable();
        }

        function changePageSize() {
            pageSize = parseInt(document.getElementById('pageSize').value);
            currentPage = 1; // Resetear a primera p√°gina
            renderTable();
        }

        // FUNCIONES PARA MODAL DE GASTOS
        function openSpendModal() {
            document.getElementById('spendModal').style.display = 'flex';
        }

        function closeSpendModal() {
            document.getElementById('spendModal').style.display = 'none';
            document.getElementById('spendForm').reset();
        }

        // Cerrar modal al hacer click fuera de √©l
        window.onclick = function(event) {
            const modal = document.getElementById('spendModal');
            if (event.target === modal) {
                closeSpendModal();
            }
        };

        // Manejar env√≠o de formulario de gastos
        document.getElementById('spendForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const campaign = document.getElementById('campaignName').value;
            const amount = parseFloat(document.getElementById('campaignAmount').value);

            try {
                const response = await fetch('/api/campaigns/spend', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ campaign, amount, currency: 'USD' })
                });

                const result = await response.json();

                if (result.success) {
                    alert(`Gasto actualizado para campa√±a "${campaign}": $${amount}`);
                    closeSpendModal();
                    // Recargar p√°gina para mostrar nuevo ROAS
                    location.reload();
                } else {
                    alert('Error: ' + (result.error || 'No se pudo actualizar el gasto'));
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error al guardar el gasto');
            }
        });

        // Inicializar gr√°fico al cargar la p√°gina
        document.addEventListener('DOMContentLoaded', () => {
            renderTable();
            updateChart();
        });
    </script>
</body>
</html>
